diff -ur cdparanoia-III-alpha9.8.orig/paranoia/p_block.h cdparanoia-III-alpha9.8/paranoia/p_block.h
--- cdparanoia-III-alpha9.8.orig/paranoia/p_block.h	Mon Mar 26 07:44:02 2001
+++ cdparanoia-III-alpha9.8/paranoia/p_block.h	Mon Jul 25 11:40:11 2005
@@ -159,6 +159,7 @@
 
   /* statistics for verification */
 
+  int readerrors;
 } cdrom_paranoia;
 
 extern c_block *c_alloc(int16_t *vector,long begin,long size);
diff -ur cdparanoia-III-alpha9.8.orig/paranoia/paranoia.c cdparanoia-III-alpha9.8/paranoia/paranoia.c
--- cdparanoia-III-alpha9.8.orig/paranoia/paranoia.c	Mon Mar 26 07:44:02 2001
+++ cdparanoia-III-alpha9.8/paranoia/paranoia.c	Mon Jul 25 11:40:11 2005
@@ -58,6 +58,8 @@
 #include "overlap.h"
 #include "gap.h"
 #include "isort.h"
+#include <sys/ioctl.h>
+#include <linux/cdrom.h>
 
 static inline long re(root_block *root){
   if(!root)return(-1);
@@ -1045,7 +1047,7 @@
 
 /* returns last block read, -1 on error */
 c_block *i_read_c_block(cdrom_paranoia *p,long beginword,long endword,
-		     void(*callback)(long,int)){
+		     void(*callback)(long,int), int *bail){
 
 /* why do it this way?  We need to read lots of sectors to kludge
    around stupid read ahead buffers on cheap drives, as well as avoid
@@ -1065,6 +1067,7 @@
   long dynoverlap=(p->dynoverlap+CD_FRAMEWORDS-1)/CD_FRAMEWORDS; 
   long anyflag=0;
 
+  *bail = 0;
   /* What is the first sector to read?  want some pre-buffer if
      we're not at the extreme beginning of the disc */
   
@@ -1140,6 +1143,14 @@
            backward! */
 
 	if(callback)(*callback)((adjread+thisread)*CD_FRAMEWORDS,PARANOIA_CB_READERR);  
+	if(++p->readerrors == 20) {
+	  if (ioctl(p->d->ioctl_fd, CDROM_DRIVE_STATUS, CDSL_CURRENT) != CDS_DISC_OK) {
+	    *bail = 1;
+	    anyflag = 0;
+	    break;
+	  }
+	  p->readerrors = 0;
+	}
 	memset(buffer+(sofar+thisread)*CD_FRAMEWORDS,0,
 	       CD_FRAMESIZE_RAW*(secread-thisread));
 	if(flags)memset(flags+(sofar+thisread)*CD_FRAMEWORDS,2,
@@ -1203,6 +1214,8 @@
   long retry_count=0,lastend=-2;
   root_block *root=&p->root;
 
+  p->readerrors=0;
+
   if(beginword>p->root.returnedlimit)p->root.returnedlimit=beginword;
   lastend=re(root);
   
@@ -1236,7 +1249,10 @@
     /* Hmm, need more.  Read another block */
 
     {    
-      c_block *new=i_read_c_block(p,beginword,endword,callback);
+      int bail;
+      c_block *new=i_read_c_block(p,beginword,endword,callback, &bail);
+      if (bail)
+        return NULL;
       
       if(new){
 	if(p->enable&(PARANOIA_MODE_OVERLAP|PARANOIA_MODE_VERIFY)){
