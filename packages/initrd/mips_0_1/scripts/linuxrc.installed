#!/bin/sh

busybox mount -t ramfs none /ramfs
IFS='
'
for i in `busybox find /`; do
  if busybox test -d $i; then
    busybox mkdir -p /ramfs$i
  else
    busybox ln -s /initrd$i /ramfs$i
  fi
done

busybox mkdir /ramfs/initrd
busybox pivot_root /ramfs /ramfs/initrd
#busybox mkdir -p /proc /sys /usr/bin /usr/sbin
busybox mkdir -p /proc /sys /bin /sbin
busybox mount -t proc none /proc
busybox mount -t sysfs none /sys
busybox --install -s
busybox mv -f /usr/bin/* /bin
busybox mv -f /usr/sbin/* /sbin
#busybox mkdir -p /proc /sys /usr/bin /lib

#busybox mkdir -p /proc /sys /bin /sbin
echo neouzabox > /proc/sys/kernel/hostname
echo 0 > /proc/sys/dev/cdrom/autoclose
echo 0 > /proc/sys/dev/cdrom/lock

export PATH=/bin:/sbin:/usr/bin:/usr/sbin
export KDEDIR=/usr/local/konqueror #added by Leo 20060301
progress() {
  if test -f /proc/splash; then
    echo "show $1" > /proc/splash
  fi
  echo "### $2 ###"
}

progress 8000 "setting up ramfs tree"
mkdir -p /dev
mkdir -p /mnt
mkdir -p /tmp
mkdir -p /var/run
mkdir -p /var/log
mkdir -p /var/lock

echo -n "" > /etc/mtab
echo -n "" > /etc/fstab
echo -n "" > /etc/mnts

UDEVD_EXPECTED_SEQNUM=$(($(cat /sys/kernel/hotplug_seqnum) + 1)) \
udevd --daemon

udevstart
echo /sbin/udevsend > /proc/sys/kernel/hotplug

grep -q installator /proc/cmdline && INSTALLATOR=yes
grep -q debugging /proc/cmdline && DEBUG=yes
BOOT=`sed 's/.*boot=\([^\ ]*\).*/\1/' /proc/cmdline`

if test "$BOOT" = nfs; then
  progress 11000 "getting nfs tree"
  NFS=`sed 's/.*nfsroot=\([^\ ]*\).*/\1/' /proc/cmdline`
  NEOUZABOX=/nfs
  mkdir -p $NEOUZABOX
  udhcpc -q -H neouzabox -n && mount -t nfs -o ro,nolock,nfsvers=2 $NFS $NEOUZABOX
  if [ ! -f "$NEOUZABOX/bin.tar.lzma" ]; then
    umount $NEOUZABOX
    rmdir $NEOUZABOX
    NEOUZABOX=
  fi
fi

progress 12000 "searching cdrom drives"
if [ "$BOOT" = cdrom ]; then
  for i in 0 1 2 3 4; do
    for DEV in `grep '^/dev/cdrom' /etc/mnts | cut -f1`; do
      CDROM=`grep "^$DEV	" /etc/mnts | cut -f2-`
      if [ -d "$CDROM/NEOUBOX" ]; then
        NEOUZABOX="$CDROM/NEOUBOX"
        ln -s "$DEV" /dev/cdrom
        break
      fi
    done
    [ -n "$NEOUZABOX" ] && break
    sleep 1
  done
fi
[ ! -e /dev/cdrom -a -b /dev/cdrom1 ] && ln -s /dev/cdrom1 /dev/cdrom

if [ "$BOOT" != cdrom -a "$BOOT" != nfs ]; then
  if [ "$INSTALLATOR" != yes ]; then
    for i in 0 1 2 3 4 7 8 9 ; do ###added by Leo 2007.11.18 if we start from usb disk we should wait it be found by os and ready

      progress 17000 "boot device detection"
      for i in 0 1 2 3 4 5 6 7 8 9; do
        [ -z "$BOOTDISK" ] && BOOTDISK=`cd /dev; ls -l $BOOT | sed 's/.* \([^ ]*\)$/\1/'`
        [ -n "$BOOTDISK" ] && grep -q "^/dev/$BOOTDISK " /proc/mounts && break
        sleep 1
      done
      for DEV in `grep '^/dev/disk' /etc/mnts | cut -f1`; do
        DIR=`grep "^$DEV	" /etc/mnts | cut -f2-`
        if [ -d "$DIR/NEOUBOX" ]; then
          NEOUZABOX="$DIR/NEOUBOX"
          [ "/dev/$BOOTDISK" = "$DEV" ] && break
        fi
      done

      [ -n "$NEOUZABOX" ] && break ###added by Leo 2007.11.18 
      sleep 1 ###added by Leo 2007.11.18 
    done ###added by Leo 2007.11.18 

  fi
fi

if test -n "$NEOUZABOX" ; then
  progress 25000 "copying system into ram"
  cp -a "$NEOUZABOX/sbin" /
  progress 27000 "copying system into ram"
  cp -a "$NEOUZABOX/etc" /
  progress 29000 "copying system into ram"
   progress 30500 "copying system into ram"
  cp -a "$NEOUZABOX/var" /
  progress 31000 "copying system into ram"
  #Leo added 2007-7-19
  mount -t cramfs -o loop $NEOUZABOX/usr.img /usr
  progress 42000 "copying system into ram"
  cp -a "$NEOUZABOX/codecs" /
  progress 45000 "copying system into ram"
  cp -a "$NEOUZABOX/firmwares" /
  progress 46000 "copying system into ram"
  chmod 755 /sbin/* #added by Leo 20080122
  INIT=/sbin/init
else
  INIT=/sbin/nosystem
  progress 65535 "cleaning ram disk"
fi

if test "$BOOT" = nfs; then
  if test "$INSTALLATOR" = yes; then
    export NFS="$NEOUZABOX"
  elif test -n "$NEOUZABOX"; then
    umount "$NEOUZABOX"
  fi
fi

if test "$BOOT" = cdrom; then
  export CDROM="${NEOUZABOX%/NEOUBOX}"
fi

export DEBUG="true"
RUNLEVEL="debug"
 
/sbin/console </dev/tty2 >/dev/tty2 2>&1 &

/bin/sh $INIT $RUNLEVEL </dev/tty1 >/dev/tty1 2>&1

  sleep 25
  poweroff
